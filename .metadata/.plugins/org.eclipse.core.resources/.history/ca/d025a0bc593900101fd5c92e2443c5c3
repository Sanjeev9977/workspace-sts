package in.ashok.rest;

 
import org.springframework.http.HttpHeaders;

import java.io.FileNotFoundException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

 

import org.springframework.core.io.Resource;
import org.springframework.core.io.UrlResource;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import in.ashok.bilder.User;

@RestController
public class DemoRestController {
	
	
	private final Path root=Paths.get("uploads");
	
	
	@PostMapping("/user")
	public ResponseEntity<String> saveUser(@RequestBody User user){
		
		
		System.out.println(user);
		
		return new ResponseEntity<String>("user saved",HttpStatus.CREATED);
	}
	
	@PostMapping("/upload")
	public ResponseEntity<String> uploadFile(@RequestParam("file") MultipartFile file){
		
		try {
			Files.copy(file.getInputStream(),this.root.resolve(file.getOriginalFilename()));
		}catch(Exception e){
			e.printStackTrace();
			
		}
		
		
		return new ResponseEntity<String>("File Uploaded",HttpStatus.CREATED);
	}
	
	@PostMapping("/user-profile")
	public ResponseEntity<String> userCreation(@RequestParam("user") String user ,@RequestParam("file") MultipartFile file){
		
		System.out.println(user);
		
		try {
			Files.copy(file.getInputStream(),this.root.resolve(file.getOriginalFilename()));
		}catch(Exception e){
			e.printStackTrace();
			
		}
		
		
		return new ResponseEntity<String>("User Profile Created",HttpStatus.CREATED);
	}
	
	public ResponseEntity<Resource> getFile(@PathVariable String filename) throws Exception {
		
		Path filePath=this.root.resolve(filename);
		
		Resource file = new UrlResource(filePath.toUri());
		
		if(file.exists()) {
			return ResponseEntity.ok()
                    .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + file.getFilename() + "\"")
                    .body(file);
		}else {
		    throw new FileNotFoundException("File not found: " + filename);
		}

		
		
		
	}
	

}
